import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:mangodevelopment/model/food.dart';
import 'package:mangodevelopment/view/widget/appBar.dart';
import 'package:uuid/uuid.dart';

import '../../color.dart';

final List<Food> quickFoods = [
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '라면',
      num: 1,
      category: '즉석식품',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '계란',
      num: 1,
      category: '우유/유제품',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '김',
      num: 1,
      category: '수산물',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '김치',
      num: 1,
      category: '김치/반찬',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '우유',
      num: 1,
      category: '우유/유제품',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '참치',
      num: 1,
      category: '수산물',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '양파',
      num: 1,
      category: '채소',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '마늘',
      num: 1,
      category: '채소',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '햄',
      num: 1,
      category: '육류',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '닭가슴살',
      num: 1,
      category: '육류',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '대파',
      num: 1,
      category: '채소',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '버터',
      num: 1,
      category: '우유/유제품',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '돼지고기',
      num: 1,
      category: '육류',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '사과',
      num: 1,
      category: '과일',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '고추',
      num: 1,
      category: '채소',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '만두',
      num: 1,
      category: '냉장/냉동식품',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '치즈',
      num: 1,
      category: '우유/유제품',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '닭고기',
      num: 1,
      category: '육류',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '고구마',
      num: 1,
      category: '채소',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '바나나',
      num: 1,
      category: '과일',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '두부',
      num: 1,
      category: '김치/반찬',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '멸치',
      num: 1,
      category: '수산물',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '콩나물',
      num: 1,
      category: '채소',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '소시지',
      num: 1,
      category: '육류',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '샐러드',
      num: 1,
      category: '채소',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '감자',
      num: 1,
      category: '채소',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '햇반',
      num: 1,
      category: '즉석식품',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '파스타면',
      num: 1,
      category: '즉석식품',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '캐첩',
      num: 1,
      category: '조미료/양념',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '마요네즈',
      num: 1,
      category: '조미료/양념',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '참기름',
      num: 1,
      category: '조미료/양념',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '간장',
      num: 1,
      category: '조미료/양념',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '고추장',
      num: 1,
      category: '조미료/양념',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '된장',
      num: 1,
      category: '조미료/양념',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
  Food(
      fId: Uuid().v4(),
      rId: Uuid().v4(),
      index: 0,
      status: true,
      name: '굴소스',
      num: 1,
      category: '조미료/양념',
      method: 0,
      displayType: true,
      shelfLife: DateTime.now(),
      registrationDay: DateTime.now(),
      alarmDate: DateTime.now(),
      cardStatus: -1),
];

//TODO. How to change color of clicked items
// when you clicked an 'item', the item has to be changed orange color
final List<bool> isClicked = [
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false,
  false
];

//Quick Data 설문 조사 결과를 바탕으로 카테고리 순서를 정함
//카테고리 순서는 다음과 같이 보여주면 된다.
final List<String> categories = [
  "우유/유제품",
  "육류",
  "채소",
  "과일",
  "수산물",
  "조미료/양념",
  "냉장/냉동식품",
  "김치/반찬",
  "즉석식품",
];

class AddFoodQuickPage extends StatefulWidget {
  @override
  _AddFoodQuickPageState createState() => _AddFoodQuickPageState();
}

class _AddFoodQuickPageState extends State<AddFoodQuickPage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: MangoAppBar(
          title: 'Quick 채우기',
          isLeading: true,
          actions: [TextButton(onPressed: () {
            //TODO. ADD some fucntion when you clicked 'add' button
          }, child: Text("추가"))],
        ),
        body: ListView.builder( // For Categories
          itemCount: categories.length,
          itemBuilder: (BuildContext context, int index) {
            return Column(
              children: [
                Container(
                  height: ScreenUtil().setHeight(40),
                  width: ScreenUtil().screenWidth,
                  decoration: BoxDecoration(
                      border: Border.all(
                        width: 2,
                        color: Color(0xFFE5E5E5),
                      ),
                      color: Color(0xFFF9F8F6)),
                  child: Align(
                      alignment: Alignment.centerLeft, child: Text("    ${categories[index]}")),
                ),
                Padding(
                  padding: const EdgeInsets.all(10.0),
                  child: GridView.builder( // For contents in same category
                      physics: NeverScrollableScrollPhysics(),
                      shrinkWrap: true,
                      gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                        crossAxisCount: 4,
                        mainAxisSpacing: 15,
                        crossAxisSpacing: 15,
                      ),
                      itemCount: 7, // TODO. Change This
                      itemBuilder: (BuildContext context, int index) {
                        return Container(
                          height: ScreenUtil().setHeight(100),
                          width: ScreenUtil().setHeight(100),
                          decoration: BoxDecoration(
                              border: Border.all(
                                width: 1,
                                color: Color(0xFFBFBFBF),
                              ),
                              borderRadius: BorderRadius.circular(50),
                              ),
                          child: Center(child: Text(quickFoods[index].name)), //TODO. Change this
                        );
                      }),
                ),
              ],
            );
          },
        ));
  }
}

// Padding(
// padding: const EdgeInsets.all(8.0),
// child: GridView.builder(
// gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
// crossAxisCount: 4,
// mainAxisSpacing: 15,
// crossAxisSpacing: 15,
// ),
// itemCount: quickFoods.length,
// itemBuilder: (BuildContext context, int index) {
// return Column(
// mainAxisSize: MainAxisSize.min,
// children: [
// Expanded(
// child: GestureDetector(
// onTap: () {
// setState(() {
// isClicked[index] = !isClicked[index];
// });
// },
// child: Container(
// decoration: BoxDecoration(
// shape: BoxShape.circle,
// image: DecorationImage(
// fit: BoxFit.fill,
// image: AssetImage('images/default_profile.png'),
// ),
// ),
// )),
// ),
// Text(
// quickFoods[index].name,
// style: TextStyle(color: isClicked[index] ? Orange700 : Colors.black),
// ),
// ],
// );
// }),
// ),

// ListView(
// children: [
// Column(
// children: [
// Container(
// height: ScreenUtil().setHeight(40),
// width: ScreenUtil().screenWidth,
// decoration: BoxDecoration(
// border: Border.all(
// width: 1,
// ),
// color: MangoDisabledContainerColor),
// child: Align(
// alignment: Alignment.centerLeft, child: Text("    우유/유제품")),
// ),
// Container(
// child: Column(
// children: [
// Container(
// height: ScreenUtil().setHeight(100),
// width: ScreenUtil().setHeight(100),
// decoration: BoxDecoration(
// borderRadius: BorderRadius.circular(10),
// color: MangoDisabledContainerColor),
// ),
// Text("게란"),
// ],
// ),
// ),
// ],
// )
// ],
// ),
